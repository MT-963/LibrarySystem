<!-- Views/Borrowing/Index.cshtml -->
@model IEnumerable<LibrarySystem.Models.BorrowingRecord>

@{
    ViewData["Title"] = "Borrowing Records";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>Borrowing Records</h1>
        <div>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> New Borrowing
            </a>
            <a asp-action="Overdue" class="btn btn-warning">
                <i class="fas fa-exclamation-triangle"></i> View Overdue
            </a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="thead-light">
                        <tr>
                            <th>Book</th>
                            <th>Member</th>
                            <th>Borrow Date</th>
                            <th>Due Date</th>
                            <th>Return Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Book.Title</td>
                                <td>@item.Member.Name</td>
                                <td>@item.BorrowDate.ToShortDateString()</td>
                                <td>@item.DueDate.ToShortDateString()</td>
                                <td>
                                    @(item.ReturnDate?.ToShortDateString() ?? "-")
                                </td>
                                <td>
                                    @if (item.ReturnDate.HasValue)
                                    {
                                        <span class="badge badge-success">Returned</span>
                                    }
                                    else if (item.DueDate < DateTime.Now)
                                    {
                                        <span class="badge badge-danger">Overdue</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-info">Borrowed</span>
                                    }
                                </td>
                                <td>
                                    @if (!item.ReturnDate.HasValue)
                                    {
                                        <a asp-action="Return" asp-route-id="@item.Id"
                                           class="btn btn-warning btn-sm">
                                            <i class="fas fa-undo"></i> Return
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>